FLEXBOX
Newer part of CSS
Only become standard part of browsers in the last 2-3 years.
It's a series of properties used to lay out content on our page.
    Basically just telling elements how to fit into a box.
A good example is a navbar or some form where the items are all
    in a row. As you shrink the browser window, the space gets
    smaller, and the items automatically decide how to fit
    together.
Even if you set a width/height on elements in the flexbox, one
    or both x and y will shrink to fit into the flexbox.

display: flex
    This basically enables flexbox

In flexbox there are two axises:
    Main Axis
    Cross Axis
    
flex-direction
    Allows to choose which direction the Main Axis goes
    Default is "row" (x / horizontal)
        flex-direction: row;
    There is also "row-reverse" which is the same axis but it
        reverses the items so they'll go right to left.
        flex-direction: row-reverse;
    Also "column" and "column-reverse"
        flex-direction: column;
        flex-direction: column-reverse;
    So, row goes left > right
    row-reverse goes right > left
    column goes up > down
    column-reverse goes down > up

justify-content
    How the content is distributed across the main axis
    Default is 'flex-start'
        justify-content: flex-start;
    Starts at the beginning of whichever direction the flex
        is going. If it's left-right, it starts at the left, etc.
    'flex-end' adjusts the end of the content to meet the end of the
        flexbox.
        So if the direction is 'row'
            flex-start will group things to the left
            flex-end will group things to the right
    'center'
        Will adjust things so they sit in the middle of the main axis
    'space-between'
        Adjust things so they are broken across the main axis evenly
        Does not include outside edges.
    'space-around'
        Same thing as 'space-between' but includes outside edges
        Each element has the same amount of space on the left and right
            So it looks wonky because there's double the space between
                items as there is at the ends
    'space-evenly'
        Same as 'space-around' except it evenly spaces everything,
            including the ends.

flex-wrap
    Determines how content will wrap into a new row or column
    3 attributes to know:
        wrap
            When reaches the end of the main axis, will wrap to
                the direction of the cross axis.
            So if flex-direction is a column, the items will be up/down
                but when it will wrap to the next row
        wrap-reverse
            Will wrap in the cross axis but it will start from the opposite
                side.
            Except it will still go in the same direction.
            So if flex-direction: column;, content will start from upper-right.
            If flex-direction: column and flex-wrap: wrap-reverse;, content
                will start from upper-left.
            So it's not complete opposite.
            It only changes the direction of the cross axis
        nowrap
            The content will not wrap

align-items
    Distribute space along the cross axis.
        justify-content is along the main axis
        align-items is along the cross axis
    align-items: flex-start;
        Align items along the beginning of the cross axis
        If flex-direction: row;, align-items: flex-start; will be along the top
    align-items: flex-end;
        Align items along the end of the cross axis
        If flex-direction: row;, align-items: flex-end; will be along the bottom
    align-items: center;
        Align items in the middle of the cross axis
    align-items: baseline;
        If you have text, this will align the items by the bottom of the letters

align-content
    Distribute space along the cross axis, but only when there are multiple
        rows/columns.

align-self
    Distributes one item at a time
    So if you have a row of items, you can choose one of them (or multiple, but
        it's specific ones) and have them align differently.
    