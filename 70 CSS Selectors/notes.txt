CSS SELECTORS
Universal selector
    Selects everything
    * {
        color: black;
    }
    This is not recommened. It will literally make EVERYTHING black, including things that can't be black.
        Images...
        Divs...
        Inputs...
        Buttons...
        etc
Element selector
    Selects all HTML elements of a certain type
    button {
        background-color: pink;
    }
Multiple element selector
    Same as before, but you can use a comma to select Multiple
    h1, h2 {
        text-decorator: underline;
    }

ID selector
    This is where you add an "id" attribute to an HTML element, 
        then you can select only it.
    <button id="sign_up">Sign Up</button>
    #sign_up {
        color: gray;
        background-color: green;
    }

Class selector
    Similar idea to an ID
    Except a class can be linked to multiple elements
    So it groups elements together.
    Doesn't all have to be the same element type.
        You can put the same class on a <span> and an <a> and it will style them both.
    <button class="test">Hi</button>
    .test {
        font-size: 16px;
    }

Descendant selector
    Selects all nested elements of the specified type.
    li a {
        color: blue;
    }
    The selection doesn't have to include everything in the nested code.
        e.g. footer > nav > ul > li > a
    You can just do the ones you need:
        e.g. footer a {
            color: blue;
        }

ADJACENT SELECTOR
h1 + p {
    color: blue;
}
This selects the element immediately after the first one.
So, a <p> tag that comes after an <h1>


DIRECT CHILD SELECTOR
Selects elements that are direct descendants of an element.
div > li {
    color: green;
}

ATTRIBUTE SELECTOR
Selects all elements where the attribute is set to specific thing
input[type="text"] {
    width: 20px;
    color: pink;
}
section[class="post"] {
    color: green;
}

Can use wildcards, so like
    a[href*="example"] {
        color: white;
    }
That will make it so all a hrefs that contain the word "example" will apply
Can use a dollar sign which means the href has to END in whatever
    a[href$=".com"] {
        color: black;
    }


PSEUDO CLASSES
Keyword added to a selector that specifies a special state of the
    selected element
Like
    If a checkbox has been checked
    Or if a link has been hovered over
    Or every other button
They all start with a colon
    :active
Examples
    a:hover {
        color: orange;
    }
    ^ that selects all a tags when they are being hovered over

    button:active {
        color: red;
    }
    ^ that selects all buttons that are currently being clicked

    input[type="checkbox"]:checked {
        margin-left: 25px;
        border: 1px solid blue;
    }
    ^ that selects all checkboxes that are checked
    ^ could also choose radio buttons by changing the type

    p:nth-of-type(2) {
        background-color: purple;
    }
    ^ selects element based on position in a sequence of elements
    ^ so the above would choose the 2nd <p> element in a series

    p:nth-of-type(2n) {
        background-color: purple;
    }
    ^ the 'n' chooses every second <p> element in a series.

    p:nth-of-last-type(2) {
        background-color: purple;
    }
    ^ Does the same as the first 'nth' example, except in reverse
    ^ So instead of choosing the 2nd element, it chooses the 2nd to last


PSEUDO ELEMENTS
Keyword added to a selector that lets you style a particular part
    of a selected element
So
    Stylize the first letter
    or first line
Usually uses two colons
    ::
But can use only one.

Examples
    p::first-letter {
        font-size: 50px;
    }
    ^ Takes the first letter of every <p> tag and makes it 50px

    p::first-line {
        color: gold;
    }
    ^ Takes the first line of every <p> and makes it gold

    p::selection {
        color: gold;
        background-color: red;
    }
    ^ changes the color/background of highlighted text
    ^ this only seems to work with colors
    ^ MDN says it works with other things, but I could only get it to
        change colors - nothing else.